name: Unit testing

on:
  pull_request:
    types: [opened, synchronize]
    branches:
    - 'feature/**'
  push:
    branches:
    - 'feature/**'

defaults:
  run:
    shell: bash

env:
  IS_GIT_CRYPT_UNLOCKED: true

jobs:
  files-changed:
    name: Detect what files changed
    runs-on: ubuntu-22.04
    # Map a step output to a job output
    outputs:
      android: ${{ steps.changes.outputs.android }}
      shared: ${{ steps.changes.outputs.shared }}
      ios: ${{ steps.changes.outputs.ios }}
    steps:
    - name: Checkout
      uses: actions/checkout@v3.1.0

    - name: Detect changes
    - uses: dorny/paths-filter@v2.11.1
      id: changes
      with:
        filters: |
          android:
            - 'androidHyperskillApp/**'
          shared:
            - 'shared/**'
          ios:
            - 'iosHyperskillApp/**'

  shared-unit-testing:
    needs: files-changed
    if: ${{ needs.files-changed.outputs.shared == 'true' }}
    name: Run shared unit tests
    runs-on: ubuntu-22.04

    steps:
    - name: Checkout
      uses: actions/checkout@v3.1.0

    - name: Install git-crypt
      run: sudo apt-get install git-crypt

    # Generate git-crypt.key file from base64 file contents and decrypt
    - name: git-crypt unlock secrets
      run: |
        echo "$GIT_CRYPT_KEY" | base64 --decode > git-crypt.key
        git-crypt unlock git-crypt.key
        rm git-crypt.key
      env:
        GIT_CRYPT_KEY: ${{ secrets.GIT_CRYPT_KEY }}

    - name: Setup Java JDK
      uses: actions/setup-java@v3.6.0
      with:
        java-version: '11'
        distribution: 'temurin'

    # Cache Gradle dependencies
    - name: Setup Gradle Dependencies Cache
      uses: actions/cache@v3
      with:
        path: ~/.gradle/caches
        key: ${{ runner.os }}-gradle-caches-${{ hashFiles('**/*.gradle', '**/*.gradle.kts') }}
        restore-keys: |
          ${{ runner.os }}-gradle-caches-

    # Cache Gradle Wrapper
    - name: Setup Gradle Wrapper Cache
      uses: actions/cache@v3
      with:
        path: ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('**/gradle*properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-wrapper-

    # Cache Kotlin/Native compiler
    - name: Setup Kotlin/Native Compiler Cache
      uses: actions/cache@v3
      with:
        path: ~/.konan
        key: ${{ runner.os }}-kotlin-native-compiler-${{ hashFiles('gradle/libs.versions.toml') }}
        restore-keys: |
          ${{ runner.os }}-kotlin-native-compiler-

    # Run all shared unit tests
    - name: Run unit tests
      run: ./gradlew shared:testReleaseUnitTest
      env:
        GITHUB_USER: ${{ github.actor }}
        GITHUB_PERSONAL_ACCESS_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  android-unit-testing:
    needs: files-changed
    if: ${{ needs.files-changed.outputs.android == 'true' }}
    name: Run Android unit tests
    runs-on: ubuntu-22.04

    steps:
    - name: Checkout
      uses: actions/checkout@v3.1.0

    - name: Install git-crypt
      run: sudo apt-get install git-crypt

    # Generate git-crypt.key file from base64 file contents and decrypt
    - name: git-crypt unlock secrets
      run: |
        echo "$GIT_CRYPT_KEY" | base64 --decode > git-crypt.key
        git-crypt unlock git-crypt.key
        rm git-crypt.key
      env:
        GIT_CRYPT_KEY: ${{ secrets.GIT_CRYPT_KEY }}
        
    - name: Setup Java JDK
      uses: actions/setup-java@v3.6.0
      with:
        java-version: '11'
        distribution: 'temurin'

    # Cache Gradle dependencies
    - name: Setup Gradle Dependencies Cache
      uses: actions/cache@v3
      with:
        path: ~/.gradle/caches
        key: ${{ runner.os }}-gradle-caches-${{ hashFiles('**/*.gradle', '**/*.gradle.kts') }}
        restore-keys: |
          ${{ runner.os }}-gradle-caches-

    # Cache Gradle Wrapper
    - name: Setup Gradle Wrapper Cache
      uses: actions/cache@v3
      with:
        path: ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('**/gradle*properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-wrapper-

    # Cache Kotlin/Native compiler
    - name: Setup Kotlin/Native Compiler Cache
      uses: actions/cache@v3
      with:
        path: ~/.konan
        key: ${{ runner.os }}-kotlin-native-compiler-${{ hashFiles('gradle/libs.versions.toml') }}
        restore-keys: |
          ${{ runner.os }}-kotlin-native-compiler-

    # Run all Android unit tests
    - name: Run unit tests
      run: ./gradlew androidHyperskillApp:testReleaseUnitTest
      env:
        GITHUB_USER: ${{ github.actor }}
        GITHUB_PERSONAL_ACCESS_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  ios-unit-testing:
    needs: files-changed
    if: ${{ needs.files-changed.outputs.ios == 'true' }}
    name: Run iOS unit tests
    runs-on: macos-12

    steps:
    - name: Checkout
      uses: actions/checkout@v3.1.0
      
    - name: Setup Xcode version
      uses: maxim-lobanov/setup-xcode@v1.5.1
      with:
        xcode-version: '14.0.1'

    - name: Homebrew install git-crypt
      run: brew install git-crypt
      env:
        HOMEBREW_NO_INSTALL_CLEANUP: true

    # Generate git-crypt.key file from base64 file contents and decrypt
    - name: git-crypt unlock secrets
      run: |
        echo "$GIT_CRYPT_KEY" | base64 --decode > git-crypt.key
        git-crypt unlock git-crypt.key
        rm git-crypt.key
      env:
        GIT_CRYPT_KEY: ${{ secrets.GIT_CRYPT_KEY }}

    - name: Setup Ruby
      uses: ruby/setup-ruby@v1.118.0
      with:
        ruby-version: '2.6.5'
        bundler-cache: true
        working-directory: './iosHyperskillApp'

    - name: Setup Java JDK
      uses: actions/setup-java@v3.6.0
      with:
        java-version: '11'
        distribution: 'temurin'

    # Cache Gradle dependencies
    - name: Setup Gradle Dependencies Cache
      uses: actions/cache@v3
      with:
        path: ~/.gradle/caches
        key: ${{ runner.os }}-gradle-caches-${{ hashFiles('**/*.gradle', '**/*.gradle.kts') }}
        restore-keys: |
          ${{ runner.os }}-gradle-caches-

    # Cache Gradle Wrapper
    - name: Setup Gradle Wrapper Cache
      uses: actions/cache@v3
      with:
        path: ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('**/gradle*properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-wrapper-

    # Cache Kotlin/Native compiler
    - name: Setup Kotlin/Native Compiler Cache
      uses: actions/cache@v3
      with:
        path: ~/.konan
        key: ${{ runner.os }}-kotlin-native-compiler-${{ hashFiles('gradle/libs.versions.toml') }}
        restore-keys: |
          ${{ runner.os }}-kotlin-native-compiler-

    # Fix Cocoapods not being able to access the shared framework file
    - name: Fix Cocoapods generateDummyFramework
      run: ./gradlew generateDummyFramework

    # Cache Pods dependencies
    - name: Cache Pods
      uses: actions/cache@v3
      id: cache-pods
      with:
        path: './iosHyperskillApp/Pods'
        key: ${{ runner.os }}-pods-${{ hashFiles('**/Podfile.lock') }}
        restore-keys: |
          ${{ runner.os }}-pods-

    # Install Pods if cache miss occurred
    - name: Install Pods
      if: steps.cache-pods.outputs.cache-hit != 'true'
      working-directory: './iosHyperskillApp'
      run: bundle exec pod install --repo-update

    # Run all iOS unit tests
    - name: Run unit tests
      working-directory: './iosHyperskillApp'
      run: bundle exec fastlane run_unit_tests install_pods:false
      env:
        FASTLANE_XCODEBUILD_SETTINGS_TIMEOUT: 60
        GITHUB_USER: ${{ github.actor }}
        GITHUB_PERSONAL_ACCESS_TOKEN: ${{ secrets.GITHUB_TOKEN }}